/* This is a json file. Comments are allowed as jsmin is used to removed comments */
{
    "Sampling": {
        "BayesianPosterior" : {   
            "Data": [
                {
                    "Type": "ReadFromFile", // ReadFromFile, GenerateSynthetic
                    "FileName": "fakePyroData.csv",
                    "xField": ["temperature"], 
                    "yField": ["dRho"], 
                    "sigmaField": ["std_dRho"]
                }
            ],
            "Model": [
                {
                    "model_name": "parallel_pyrolysis", 
                    "input_file": "reaction_scheme.json", 
                    "param_names": ["tau"],
                    "param_values": [6.1],
                    "parametrization" : "no"
                }
            ],
            "Prior" : {
                "Distribution": "Mixture", 
                "Param" : {
                    "A1": {"initial_val" : 16634,    "prior_name" : "Uniform", "prior_param" : [0, 1e10]}, 
                    "E1": {"initial_val" : 113000,    "prior_name" : "Uniform", "prior_param" : [1000, 1e10]}, 
                    "n1": {"initial_val" : 2.0,    "prior_name" : "Uniform", "prior_param" : [1.01, 1e2]}, 
                    "g1": {"initial_val" : 0.04,    "prior_name" : "Uniform", "prior_param" : [0.0, 1.0]}
                }
            },
            "Likelihood": {
                "function": "Gaussian",
                "distance": "L2"
            }
        },
	    "Algorithm": {
		    "name": "RWMH", 
		    "n_iterations": 1e4,
		    "proposal": { 
			    "name": "Gaussian",
			    "covariance": { 
				    "type": "diag", 
				    "value": [1e-4, 1e-3, 1e-3, 1e-4]
				}
			}
		}
	}, 
	
    "PostProcess": { 
	    "Data": { 
		    "display": "yes",
		    "num_plot": 1
		},
	    "InitialGuess": {
		    "display": "yes",
		    "num_plot": 1
		},
	    "MarkovChain": {
		    "display": "yes",
		    "thinning": 1
		},
        "Posterior": {
            "display": "yes", 
            "distribution": "marginal", // marginal, bivariate
            "estimation": "ksdensity+hist", // ksdensity, hist, ksdensity+hist, contour (only for bivariate)
            "burnin": 100
        },
        "Propagation": {
		    "display": "yes",
		    "shaded_area": "yes",
		    "burnin": 0,
		    "num_plot": 1
		}
	}
}
