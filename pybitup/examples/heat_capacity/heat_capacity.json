/* This is a json file. Comments are allowed as jsmin is used to removed comments */
{
    "Sampling": {
        "BayesianPosterior" : { 
            "Data": [
                {
                    "Type": "ReadFromFile", // ReadFromFile, GenerateSynthetic
                    "FileName": "data_heat_capacity",
                    "xField": ["T"], 
                    "yField": ["cp"], 
                    "sigmaField": ["std_cp"]
                    // "n_runs": 2 // use n_runs if there are several input data files 
                }
            ],
            "Model": [
                {
                    "param_names": ["A", "B", "C", "D"],
                    "param_values": [-333.33, 4095.83, -2553.33, 570.83],
                    "parametrization" : "no"
                }
            ],
            "Prior": { 
                "Distribution": "Mixture", 
                "Param": {
                    "A": {"initial_val" : -333.33,    "prior_name" : "Uniform", "prior_param" : [-1e4, 1e4]}, 
                    "B": {"initial_val" : 4095.83,    "prior_name" : "Uniform", "prior_param" : [-1e4, 1e4]}, 
                    "C": {"initial_val" : -2553.33,    "prior_name" : "Uniform", "prior_param" : [-1e4, 1e4]}, 
                    "D": {"initial_val" : 570.83,    "prior_name" : "Uniform", "prior_param" : [-1e4, 1e4]}
                }
            },
	        "Likelihood": {
                "function": "Gaussian",
                "distance": "L2"
            }
        },
	    "Algorithm": {
		    "name": "DR",
            "DR": {
                "gamma": 0.5
			},
		    "n_iterations": 1e4, 
		    "proposal": { 
			    "name": "Gaussian",
			    "covariance": { 
				    "type": "diag", 
				    "value": [1e2, 1e3, 1e3, 1e2]
			    }  
		    }
	    }
    },

    "PostProcess": { 
	    "Data": { 
		    "display": "yes", 
		    "num_plot": [1]
	    },
	    "InitialGuess": {
		    "display": "yes",
		    "num_plot": 1
	    },
	    "MarkovChain": {
		    "display": "yes",
		    "thinning": 1
	    },
        "Posterior": {
            "display": "yes", 
            "distribution": "marginal", // marginal, bivariate
            "estimation": "ksdensity+hist", // ksdensity, hist, ksdensity+hist, contour (only for bivariate)
            "burnin": 100
        },
        "PosteriorPredictiveCheck": {
		    "display": "yes",
            "cred_int": "yes",
            "pred_int": "yes",
		    "burnin": 0,
		    "num_plot": 1
		}
    }
}