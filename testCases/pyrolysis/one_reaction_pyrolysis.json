/* This is a json file. Comments are allowed as jsmin is used to removed comments */
{
    "Sampling": {
        "BayesianPosterior" : { 
            "Data": [ 
                {
                    "Type": "GenerateSynthetic", 
                    "x": {
                        "Type": "linspace", 
                        "Value": [300.0, 1400.0, 101]
                    },
                    "y": {
                        "Name": "Temperature",
                        "Error": "data",
                        "Sigma": 0.00001
                    }
                }
            ],
            "Model": [ 
                {
                    "model_id": "one_reaction_pyrolysis", 
                    "param_names": ["A", "E", "n", "m", "F", "tau"],
                    "param_values": [1.6635e4, 113000, 2.0, 0.0,  0.04, 6.1],
                    "parametrization" : "no"
                }
            ],
            "Prior" : {
                "Distribution": "Mixture", 
                "Param" : {
                    "A": {"initial_val" : 1.6635e4,    "prior_name" : "Uniform", "prior_param" : [0, 1e15]}, 
                    "E": {"initial_val" : 113000,    "prior_name" : "Uniform", "prior_param" : [1000, 1e10]}, 
                    "n": {"initial_val" : 2.0,    "prior_name" : "Uniform", "prior_param" : [1.0, 1e2]}, 
                    "F": {"initial_val" : 0.04,    "prior_name" : "Uniform", "prior_param" : [0.0, 1.0]}
                }
            },
	        "Likelihood": {
		        "function": "Gaussian",
		        "distance": "L2"
            }
        },
	    "Algorithm": {
		    "name": "RWMH", 
		    "n_iterations": 1e5, 
		    "proposal": { 
			    "name": "Gaussian",
			    "covariance": { 
                    "type": "diag", 
				    "value": [1e4, 1e4, 1e-3, 1e-5]
				}
			}
        }
    },
    
    "Propagation": {
        "Model": [ 
            {
                // Emulator ? 
                "model_id": "6.1_K_per_Min", // Optional
                "design_points": {
                    "filename": "test_design_points.dat", 
                    "field": 0
                },  
                "param_names": ["A", "E", "n", "m", "F", "tau"],
                "param_values": [1.6635e4, 113000, 2.0, 0.0,  0.04, 6.1],
                "parametrization" : "no",
                "emulator": "pce",
                "pce": {
                    
                    "polynomials":{
                        "method": "gram_schmidt",                           // "gram_schmidt" or "recurrence"
                        "point_coordinates": "output/mcmc_chain.csv",       // "file.csv" or "file.npy"
                        "hyperbolic_truncation": 0.75,                      // must be > 0
                        "point_weights": "None",                            // "file.csv", "file.npy" or "None"
                        "order": 4                                          // must be integer > 0
                        //"parameter_laws": [                               // Laws of the parameters
                            //{"uniform": [-1,1]},
                            //{"gamma": [2,3]},
                            //{"normal": [0,1]},
                            //{"expo": [1]}
                        //]
                    },
                
                    "quadrature":{
                        "method": "simplex",                                // "monte_carlo", "quasi-monte carlo", "fekete", "leja", "simplex" or "null space"
                        "order_truncation": 2                               // must be integer, generally >= half of "order"
                        //"weight_function": "None"                         // must be a vectorized callable function fx(var1,var2,...,varN) or "None"
                        //"domain": [[0,1],[1,2]]                           // 1D or 2D array [[dom1],[dom2],...[domN]]
                        //"number_points": 1e5                              // Number of points for quasi-Monte Carlo

                    },
                
                    "coefficients":{
                        "method": "lars_full",                              // "spectral","colloc","lars" or "lars_full"
                        "iterations": 10                                    // must be integer > 0 and can be "unlimited"
                    }
                }
            }, 
            {
                // Emulator ? 
                "model_id": "366_K_per_Min", // Optional
                "design_points": {
                    "filename": "test_design_points.dat", 
                    "field": 0
                },  
                "param_names": ["A", "E", "n", "m", "F", "tau"],
                "param_values": [1.6635e4, 113000, 2.0, 0.0,  0.04, 366],
                "parametrization" : "no"
            }
        ],
        "Uncertain_param": {
            "A":  {"filename": "output/mcmc_chain.csv", "field": 0}, 
            //"A":  {"filename": "None, "distribution": "Gaussian", "hyperparam": [mean, sigma]}, 
            "E":  {"filename": "output/mcmc_chain.csv", "field": 1}, 
            "n":  {"filename": "output/mcmc_chain.csv", "field": 2}, 
            "F":  {"filename": "output/mcmc_chain.csv", "field": 3}
        },
        "Model_evaluation": {
            "Parallel_evaluation": {
                "model_concurrency_evaluation" : 1, 
                "sample_concurrency_evaluation" : 1
            }
        }
    },

    "PostProcess": { 
	    "Data": { 
		    "display": "yes",
		    "num_plot": [1]
		},
	    "InitialGuess": {
		    "display": "yes",
		    "num_plot": 1
		},
	    "MarkovChain": {
		    "display": "yes",
		    "thinning": 1
		},
        "Posterior": {
            "display": "no", 
            "distribution": "bivariate", // marginal, bivariate
            "estimation": "contour", // ksdensity, hist, ksdensity+hist, contour (only for bivariate)
            "burnin": 1
        },
        "Propagation": {
		    "display": "yes",
		    "shaded_area": "yes",
		    "burnin": 1,
		    "num_plot": 1
		}
    }
}